Question Number:- #004

Difficulty:- EASY

Question:- Given an integer array nums of length n where all the integers of nums are in the range [1, n] and 
            each integer appears once or twice, return an array of all the integers that appears twice.

You must write an algorithm that runs in O(n) time and uses only constant extra space.

 Queston Link :- https://leetcode.com/problems/find-all-duplicates-in-an-array/ 

Solution:- 

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {


        int n=nums.size();
        vector<int> res;
        vector<int> cntArr(n+1, 0);
        for(int i=0;i<n;i++){
            cntArr[nums[i]]++;
        }

        for(int i=1;i<=n;i++){
            if(cntArr[i]==2)res.push_back(i);
        }
        return res;

    }
};

[ Solution to this problem has been provided by @Akhilendra ]
